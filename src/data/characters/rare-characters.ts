import { AffinityType } from "../../types/affinity";
import { CharacterBase } from "../../types/character";
import { Rarity } from "../../types/rarity";
import { StatType } from "../../types/stats";
import {
  CrystalShardBarrageSkill,
  GemstoneBarrierSkill,
  SoulSiphonSkill,
  SpiritLinkSkill,
  ArcaneBarrageSkill,
  AncientWisdomSkill,
  TemporalShiftSkill,
  ChaoticStrikeSkill,
  VoidRendSkill,
  ShadowEmbraceSkill,
  SunfireBurstSkill,
  DivineShieldSkill,
  WildChargeSkill,
  PrimalRoarSkill,
  FabricateArmorSkill,
  ThreadedBarrageSkill,
} from "../skills/rare-skills-1"; // Import the new rare skills
import { BASELINE } from "../statBaselines"; // Assuming BASELINE exists

export const rareCharacters: CharacterBase[] = [
  {
    id: "gemini_guardian",
    name: "Gemini Guardian",
    rarity: Rarity.RARE,
    stats: {
      [StatType.health]: BASELINE.RARE[StatType.health] + 100,
      [StatType.energy]: BASELINE.RARE[StatType.energy],
      [StatType.energyGain]: BASELINE.RARE[StatType.energyGain],
      [StatType.strength]: BASELINE.RARE[StatType.strength],
      [StatType.defense]: BASELINE.RARE[StatType.defense] + 50,
      [StatType.magic]: BASELINE.RARE[StatType.magic],
      [StatType.magicDefense]: BASELINE.RARE[StatType.magicDefense] + 50,
      [StatType.speed]: BASELINE.RARE[StatType.speed] - 10,
      [StatType.critChance]: BASELINE.RARE[StatType.critChance],
      [StatType.critDamage]: BASELINE.RARE[StatType.critDamage],
    },
    skills: [CrystalShardBarrageSkill, GemstoneBarrierSkill],
    ultimateSkill: CrystalShardBarrageSkill, // Placeholder
    strongAffinities: [AffinityType.gem],
    weakAffinities: [AffinityType.textile],
  },
  {
    id: "soul_weaver",
    name: "Soul Weaver",
    rarity: Rarity.RARE,
    stats: {
      [StatType.health]: BASELINE.RARE[StatType.health],
      [StatType.energy]: BASELINE.RARE[StatType.energy] + 20,
      [StatType.energyGain]: BASELINE.RARE[StatType.energyGain] + 5,
      [StatType.strength]: BASELINE.RARE[StatType.strength] - 20,
      [StatType.defense]: BASELINE.RARE[StatType.defense],
      [StatType.magic]: BASELINE.RARE[StatType.magic] + 70,
      [StatType.magicDefense]: BASELINE.RARE[StatType.magicDefense] + 20,
      [StatType.speed]: BASELINE.RARE[StatType.speed],
      [StatType.critChance]: BASELINE.RARE[StatType.critChance],
      [StatType.critDamage]: BASELINE.RARE[StatType.critDamage],
    },
    skills: [SoulSiphonSkill, SpiritLinkSkill],
    ultimateSkill: SoulSiphonSkill, // Placeholder
    strongAffinities: [AffinityType.spirit],
    weakAffinities: [AffinityType.chaos],
  },
  {
    id: "arcane_scholar",
    name: "Arcane Scholar",
    rarity: Rarity.RARE,
    stats: {
      [StatType.health]: BASELINE.RARE[StatType.health] - 50,
      [StatType.energy]: BASELINE.RARE[StatType.energy] + 10,
      [StatType.energyGain]: BASELINE.RARE[StatType.energyGain] + 3,
      [StatType.strength]: BASELINE.RARE[StatType.strength] - 30,
      [StatType.defense]: BASELINE.RARE[StatType.defense] - 10,
      [StatType.magic]: BASELINE.RARE[StatType.magic] + 80,
      [StatType.magicDefense]: BASELINE.RARE[StatType.magicDefense] + 30,
      [StatType.speed]: BASELINE.RARE[StatType.speed] + 10,
      [StatType.critChance]: BASELINE.RARE[StatType.critChance],
      [StatType.critDamage]: BASELINE.RARE[StatType.critDamage],
    },
    skills: [ArcaneBarrageSkill, AncientWisdomSkill],
    ultimateSkill: ArcaneBarrageSkill, // Placeholder
    strongAffinities: [AffinityType.knowledge],
    weakAffinities: [AffinityType.beast],
  },
  {
    id: "chronomancer",
    name: "Chronomancer",
    rarity: Rarity.RARE,
    stats: {
      [StatType.health]: BASELINE.RARE[StatType.health],
      [StatType.energy]: BASELINE.RARE[StatType.energy] + 15,
      [StatType.energyGain]: BASELINE.RARE[StatType.energyGain] + 4,
      [StatType.strength]: BASELINE.RARE[StatType.strength] - 10,
      [StatType.defense]: BASELINE.RARE[StatType.defense],
      [StatType.magic]: BASELINE.RARE[StatType.magic] + 50,
      [StatType.magicDefense]: BASELINE.RARE[StatType.magicDefense] + 10,
      [StatType.speed]: BASELINE.RARE[StatType.speed] + 30,
      [StatType.critChance]: BASELINE.RARE[StatType.critChance],
      [StatType.critDamage]: BASELINE.RARE[StatType.critDamage],
    },
    skills: [TemporalShiftSkill, ChaoticStrikeSkill],
    ultimateSkill: TemporalShiftSkill, // Placeholder
    strongAffinities: [AffinityType.chaos],
    weakAffinities: [AffinityType.radiance],
  },
  {
    id: "void_reaver",
    name: "Void Reaver",
    rarity: Rarity.RARE,
    stats: {
      [StatType.health]: BASELINE.RARE[StatType.health] + 50,
      [StatType.energy]: BASELINE.RARE[StatType.energy],
      [StatType.energyGain]: BASELINE.RARE[StatType.energyGain] + 2,
      [StatType.strength]: BASELINE.RARE[StatType.strength] + 60,
      [StatType.defense]: BASELINE.RARE[StatType.defense] + 10,
      [StatType.magic]: BASELINE.RARE[StatType.magic] - 30,
      [StatType.magicDefense]: BASELINE.RARE[StatType.magicDefense] - 20,
      [StatType.speed]: BASELINE.RARE[StatType.speed] + 20,
      [StatType.critChance]: BASELINE.RARE[StatType.critChance] + 5,
      [StatType.critDamage]: BASELINE.RARE[StatType.critDamage] + 20,
    },
    skills: [VoidRendSkill, ShadowEmbraceSkill],
    ultimateSkill: VoidRendSkill, // Placeholder
    strongAffinities: [AffinityType.void],
    weakAffinities: [AffinityType.radiance],
  },
  {
    id: "sunstone_paladin",
    name: "Sunstone Paladin",
    rarity: Rarity.RARE,
    stats: {
      [StatType.health]: BASELINE.RARE[StatType.health] + 150,
      [StatType.energy]: BASELINE.RARE[StatType.energy] - 10,
      [StatType.energyGain]: BASELINE.RARE[StatType.energyGain],
      [StatType.strength]: BASELINE.RARE[StatType.strength] + 30,
      [StatType.defense]: BASELINE.RARE[StatType.defense] + 40,
      [StatType.magic]: BASELINE.RARE[StatType.magic],
      [StatType.magicDefense]: BASELINE.RARE[StatType.magicDefense] + 30,
      [StatType.speed]: BASELINE.RARE[StatType.speed] - 5,
      [StatType.critChance]: BASELINE.RARE[StatType.critChance],
      [StatType.critDamage]: BASELINE.RARE[StatType.critDamage],
    },
    skills: [SunfireBurstSkill, DivineShieldSkill],
    ultimateSkill: SunfireBurstSkill, // Placeholder
    strongAffinities: [AffinityType.radiance],
    weakAffinities: [AffinityType.void],
  },
  {
    id: "forest_shaman",
    name: "Forest Shaman",
    rarity: Rarity.RARE,
    stats: {
      [StatType.health]: BASELINE.RARE[StatType.health] + 80,
      [StatType.energy]: BASELINE.RARE[StatType.energy] + 10,
      [StatType.energyGain]: BASELINE.RARE[StatType.energyGain] + 3,
      [StatType.strength]: BASELINE.RARE[StatType.strength] + 20,
      [StatType.defense]: BASELINE.RARE[StatType.defense] + 10,
      [StatType.magic]: BASELINE.RARE[StatType.magic] + 40,
      [StatType.magicDefense]: BASELINE.RARE[StatType.magicDefense] + 20,
      [StatType.speed]: BASELINE.RARE[StatType.speed],
      [StatType.critChance]: BASELINE.RARE[StatType.critChance],
      [StatType.critDamage]: BASELINE.RARE[StatType.critDamage],
    },
    skills: [WildChargeSkill, PrimalRoarSkill],
    ultimateSkill: WildChargeSkill, // Placeholder
    strongAffinities: [AffinityType.beast],
    weakAffinities: [AffinityType.knowledge],
  },
  {
    id: "cloth_artisan",
    name: "Cloth Artisan",
    rarity: Rarity.RARE,
    stats: {
      [StatType.health]: BASELINE.RARE[StatType.health] - 20,
      [StatType.energy]: BASELINE.RARE[StatType.energy] + 5,
      [StatType.energyGain]: BASELINE.RARE[StatType.energyGain] + 2,
      [StatType.strength]: BASELINE.RARE[StatType.strength],
      [StatType.defense]: BASELINE.RARE[StatType.defense] + 20,
      [StatType.magic]: BASELINE.RARE[StatType.magic] + 10,
      [StatType.magicDefense]: BASELINE.RARE[StatType.magicDefense] + 10,
      [StatType.speed]: BASELINE.RARE[StatType.speed] + 15,
      [StatType.critChance]: BASELINE.RARE[StatType.critChance],
      [StatType.critDamage]: BASELINE.RARE[StatType.critDamage],
    },
    skills: [FabricateArmorSkill, ThreadedBarrageSkill],
    ultimateSkill: FabricateArmorSkill, // Placeholder
    strongAffinities: [AffinityType.textile],
    weakAffinities: [AffinityType.gem],
  },
];
